/**
 * Copyright (C) Pipin Fitriadi - All Rights Reserved
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Pipin Fitriadi <pipinfitriadi@gmail.com>, 22 May 2025
 */

{
  "version": "2.0.0",
  "tasks": [
    {
      "problemMatcher": [],
      "label": "Git: Fetch Upstream",
      "type": "shell",
      "options": {
        "env": {
          "UPSTREAM": "https://github.com/pipinfitriadi/workspace.git"
        }
      },
      "command": "if [[ $(git remote | grep upstream) != 'upstream' ]]; then git remote add upstream $UPSTREAM && git remote set-url --push upstream DISABLE && git remote -v | grep upstream; fi && git fetch upstream"
    },
    {
      "problemMatcher": [],
      "label": "Preparation",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Git: Fetch Upstream",
        "Preparation: VS Code Extensions",
        "Preparation: oh-my-posh",
        "Python: Create VEnv"
      ],
      "type": "shell",
      "command": "echo Environment preparation is complete"
    },
    {
      "problemMatcher": [],
      "label": "Preparation: jq",
      "type": "shell",
      "command": "which jq || sudo apt install jq"
    },
    {
      "problemMatcher": [],
      "label": "Preparation: oh-my-posh",
      "dependsOn": "Preparation: unzip",
      "type": "shell",
      "command": "which $HOME/.local/bin/oh-my-posh || curl -s https://ohmyposh.dev/install.sh | bash -s"
    },
    {
      "problemMatcher": [],
      "label": "Preparation: unzip",
      "type": "shell",
      "command": "which unzip || sudo apt install unzip"
    },
    {
      "problemMatcher": [],
      "label": "Preparation: VS Code Extensions",
      "dependsOn": "Preparation: jq",
      "type": "shell",
      "command": "jq -r '.recommendations[]' .vscode/extensions.json | xargs -L 1 code --install-extension"
    },
    {
        "problemMatcher": [],
        "label": "Python: Create VEnv",
        "type": "shell",
        "command": "if [ ! -d .venv/ ]; then ${input:python-app} -m venv .venv/; fi && .venv/bin/python -V"
    },
    {
      "problemMatcher": [],
      "label": "Python: Environment dependencies",
      "type": "shell",
      "options": {
          "env": {"PIP_DISABLE_PIP_VERSION_CHECK": "1"}
      },
      "command": "${command:python.interpreterPath}",
      "args": [
          "-m", "pip", "install",
          "-r", "requirements.code-quality.txt",
          "-r", "requirements.code-coverage.txt",
      ]
  },
    {
      "problemMatcher": [],
      "label": "Python: Preparation",
      "dependsOrder": "sequence",
      "dependsOn": [
          "Python: Create VEnv",
          "Python: Environment dependencies"
      ],
      "type": "shell"
  },
  ],
  "inputs": [{
      "id": "python-app",
      "type": "promptString",
      "description": "Python app path for creating virtual environment",
      "default": "python3"
  }]
}
